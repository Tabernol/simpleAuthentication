plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.1'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.krasnoposlkyi'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.liquibase:liquibase-core'

    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0'


    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.5'
    runtimeOnly group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.5'

    /////////////////////////////////////////////////////
    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-xml
    implementation group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-xml', version: '2.15.2'
    ////////////////////////////////////////////////////////////////////


    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'mysql:mysql-connector-java:8.0.33'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'


    testImplementation 'org.testcontainers:testcontainers:1.18.2'
    testImplementation 'org.testcontainers:mysql:1.18.2'
    testImplementation 'org.testcontainers:junit-jupiter:1.18.2'

}

tasks.named('test') {
    useJUnitPlatform()
}

def integrationTest = tasks.register("integrationTest", Test) {
    useJUnitPlatform {
        filter {
            includeTestsMatching '*IntegrationTest'
        }
    }
    testLogging {
        events "passed", "skipped", "failed"
    }

}

tasks.named('check') {
    dependsOn integrationTest
}
